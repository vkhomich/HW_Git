===========================JSON====================================

 4. Создать внешний репозиторий c названием JSON.
 5. Клонировать репозиторий JSON на локальный компьютер.---------------------$ git clone https://github.com/vkhomich/JSON
 6. Внутри локального JSON создать файл “new.json”.--------------------------$ cd /d/JSON          $ touch new.json
 7. Добавить файл под гит.---------------------------------------------------$ git add new.json
 8. Закоммитить файл.--------------------------------------------------------$ git commit -m "add new.json file"
 9. Отправить файл на внешний GitHub репозиторий.----------------------------$ git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе 
(ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
---------------------------------------------------------------
$ vim new.json
{
        "ФИО": "Хомич Виктория Геннадьевна",
        "Возраст": 34,
        "Количество домашних животных": 0,
        "Будущая желаемая зарплата": "750$"
}
---------------------------------------------------------------
 11. Отправить изменения на внешний репозиторий.-----------------------------$ git push
 12. Создать файл preferences.json-------------------------------------------$ touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях 
(Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
--------------------------------------------------------------------
$ vim preferences.json
{
        "Любимый фильм": "Побег из тюрьмы",
        "Любимый сериал": "Постучись в мою дверь",
        "Любимая еда": "Персики",
        "Любимое время года": "Лето",
        "Страна которую хотели бы посетить": "Австалия"
}
--------------------------------------------------------------------
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
--------------------------------------------------------------------
$ touch skills.json
$ vim skills.json
{
        "Базовая теория": "Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования, SDLC, STLC",
        "Клиент-серверная архитектура": "HTTP Методы запросов на сервер, коды ответов HTTP сервера, структуры HTTP запросов и ответов",
        "Что такое JSON, XML": "Их структура",
        "Тестирование API через Postman": "JS, автотесты API, cнятие и чтение логов c внешнего сервера",
        "Снифинг http web трафика": "через Charles и Fiddler",
        "Dev Tools веб браузеров": "Google Chrome, FireFox",
        "VPN": "Как работает, зачем нужен, как использовать, варианты инструментов",
        "Мобильное тестирование": "Особенность iOS, Android, гайдлайны, cборка iOS приложений на XCode, cборка Android приложений на Android Studio",
        "ADB": "управление андройд девайсами",
        "Настройка прокси и vpn": "на iOS и Android",
        "Перехват (сниффинг) мобильного трафика": "через Charles и Fiddler на iOS и Android",
        "Командная строка (terminal) Linux": "копирование, создание, просмотр, перемещение файлов на серверах без графического интерфейса",
        "Основы bash скриптинг": "автоматизация рутинных задач на сервере",
        "Основы SQL": "Create, Delete, Drop, Insert Into, Select, From, Where, Join",
        "База данных Postgres": "установка, настройка и использование",
        "Нереляционная база данных Redis": "установка, настройка и использование",
        "Python": "Изучение основ. Создание клиент серверного приложени",
        "Jmeter": "Нагрузочное тестирование",
        "Scrum": "Методология разработки"
}
------------------------------------------------------------------------
 15. Отправить сразу 2 файла на внешний репозиторий.
------------------------------------------------------------------------
$ git add
$ git commit -m "add preferences.json and skills.json files with info"
$ git push
------------------------------------------------------------------------
 16. На веб интерфейсе создать файл bug_report.json. 
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 20. Синхронизировать внешний и локальный репозиторий JSON
----------------------------------------------------------------------
$ git fetch
$ git merge
----------------------------------------------------------------------
(или $ git pull)


=============XML====================================

 21. Создать внешний репозиторий c названием XML.
 22. Клонировать репозиторий XML на локальный компьютер.----------------$ git clone https://github.com/vkhomich/XML
 23. Внутри локального XML создать файл “new.xml”.----------------------$ cd /d/XML      $ touch new.xml
 24. Добавить файл под гит.---------------------------------------------$ git add new.xml
 25. Закоммитить файл.--------------------------------------------------$ git commit -m "add empty new.xml file"
 26. Отправить файл на внешний GitHub репозиторий.----------------------$ git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе 
(ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
----------------------------------------------------------------------
$ vim new.xml
<о себе>
        <фио> Хомич Виктория Геннадьевна </фио>
        <возраст>34</возраст>
        <количество домашних животных>0</количество домашних животных>
        <будущая желаемая зарплата>750$</будущая желаемая зарплата>
</о себе>
-----------------------------------------------------------------------
 28. Отправить изменения на внешний репозиторий.
-----------------------------------------------------------------------
$ git add new.xml
$ git commit -m "add info in new.xml file"
$ git push
-----------------------------------------------------------------------
 29. Создать файл preferences.xml----------------------------------------$ touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях 
(Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
-------------------------------------------------------------------------------------------
$ vim preferences.xml
<preferences>
        <любимый фильм>Побег из тюрьмы</любимый фильм>
        <любимый сериал>Постучись в мою дверь</любимый сериал>
        <любимая еда>Персики</любимая еда>
        <любимое время года>Лето</любимое время года> 
        <страна которую хотели бы посетить>Австалия</страна которую хотели бы посетить>
</preferences>
--------------------------------------------------------------------------------------------
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
-------------------------------------------------------------------------------------------------------
$ touch skills.xml
$ vim skills.xml
<skills>
        <базовая теория>Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования, SDLC, STL</базовая теория>
        <клиент-серверная архитектура>HTTP Методы запросов на сервер, коды ответов HTTP сервера, структуры HTTP запросов и ответов</клиент-серверная архитектура>
        <JSON, XML>Определение, структура</JSON, XML>
        <тестирование API через Postman>JS, автотесты API, cнятие и чтение логов c внешнего сервера</тестирование API через Postman> 
        <снифинг http web трафика>через Charles и Fiddler</снифинг http web трафика>
        <Dev Tools веб браузеров>Google Chrome, FireFox</Dev Tools веб браузеров>
        <VPN>Как работает, зачем нужен, как использовать, варианты инструментов</VPN>
        <мобильное тестирование>Особенность iOS, Android, гайдлайны, cборка iOS приложений на XCode, cборка Android приложений на Android Studio</мобильное тестирование>
        <ADB>управление андройд девайсами</ADB>
        <настройка прокси и vpn>на iOS и Android</настройка прокси и vpn>
        <перехват (сниффинг) мобильного трафика>через Charles и Fiddler на iOS и Android</перехват (сниффинг) мобильного трафика>
        <командная строка (terminal) Linux>копирование, создание, просмотр, перемещение файлов на серверах без графического интерфейс</командная строка (terminal) Linux>
        <Основы bash скриптинг>автоматизация рутинных задач на сервере</Основы bash скриптинг>
        <Основы SQL>Create, Delete, Drop, Insert Into, Select, From, Where, Join</Основы SQL>
        <База данных Postgres>установка, настройка и использовани</База данных Postgres>
        <Нереляционная база данных Redis>установка, настройка и использование</Нереляционная база данных Redis>
        <Python>Изучение основ. Создание клиент серверного приложения</Python>
        <Jmeter>Нагрузочное тестирование</Jmeter>
        <Scrum>Методология разработки</Scrum>    
</skills>
-----------------------------------------------------------------------------------------------------------
 32. Сделать коммит в одну строку.
-----------------------------------------------------------------------------------------------------------
$ git add preferences.xml skills.xml
$ git commit -am "add preferences.xml and skills.xml files with info"
-----------------------------------------------------------------------------------------------------------
 33. Отправить сразу 2 файла на внешний репозиторий.---------------------------------$ git push
 34. На веб интерфейсе создать файл bug_report.xml.
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 38. Синхронизировать внешний и локальный репозиторий XML---------------------------$ git pull


=======================================TXT==========================================================================
 1. Создать внешний репозиторий c названием TXT.
 2. Клонировать репозиторий TXT на локальный компьютер.-------------------$ git clone https://github.com/vkhomich/TXT
 3. Внутри локального TXT создать файл “new.txt”.-------------------------$ cd /d/TXT      $ touch new.txt
 4. Добавить файл под гит.------------------------------------------------$ git add new.txt
 5. Закоммитить файл.-----------------------------------------------------$ git commit -m "add new.txt file"
 6. Отправить файл на внешний GitHub репозиторий.-------------------------$ git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе 
(ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
----------------------------------------------------------------------------------------------------
$ vim new.txt
ФИО: Хомич Виктория Геннадьевна
Возраст: 34
Количество домашних животных: 0
Будущая желаемая зарплата: 750$
----------------------------------------------------------------------------------------------------
 8. Отправить изменения на внешний репозиторий.
----------------------------------------------------------------------------------------------------
$ git add new.txt
$ git commit -m "add info in new.txt file"
$ git push
----------------------------------------------------------------------------------------------------
 9. Создать файл preferences.txt-------------------------------------------$ touch preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях 
(Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
----------------------------------------------------------------------------------------------------
$ vim preferences.txt
любимый фильм: "Побег из тюрьмы"
любимый сериал: "Постучись в мою дверь"
любимая еда: персики
любимое время года: лето 
страна которую хотели бы посетить: Австалия
----------------------------------------------------------------------------------------------------
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
----------------------------------------------------------------------------------------------------
$ touch skills.txt
$ vim skills.txt
Программа курса:
1. Базовая теория (Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.) SDLC, STLC.
2. Что такое клиент-серверная архитектура.
3. HTTP Методы запросов на сервер.
4. Коды ответов HTTP сервера.
5. Структуры HTTP запросов и ответов.
6. Что такое JSON, XML. Их структура.
7. Тестирование API через Postman (JS, автотесты API).
8. Снятие и чтение логов c внешнего сервера.
9. Снифинг http web трафика через Charles и Fiddler.
10. Dev Tools веб браузеров (Google Chrome, FireFox).
11. VPN. (Как работает, зачем нужен, как использовать, варианты инструментов)
12. Мобильное тестирование.
13. Особенность iOS, Android, гайдлайны.
14. Сборка iOS приложений на XCode. (У кого нет Mac компьютера, просто посмотрят)
15. Сборка Android приложений на Android Studio.
16. ADB (управление андройд девайсами).
17. Настройка прокси и vpn на iOS и Android.
18. Перехват (сниффинг) мобильного трафика через Charles и Fiddler на iOS и Android.
19. Командная строка (terminal) Linux (копирование, создание, просмотр, перемещение файлов на серверах без графического интерфейса)
20. Основы bash скриптинг, автоматизация рутинных задач на сервере.
21. Доступ к удалённым серверам.
22. Основы SQL (Create, Delete, Drop, Insert Into, Select, From, Where, Join).
23. База данных Postgres (установка, настройка и использование).
24. Нереляционная база данных Redis (установка, настройка и использование).
25. Нагрузочное тестирование в Jmeter.
26. Методология разработки Scrum.
27. Python. (Изучение основ. Создание клиент серверного приложения)
------------------------------------------------------------------------------------------------------------------------
 12. Сделать коммит в одну строку.
--------------------------------------------------------------------------------
$ git add preferences.txt skills.txt
$ git commit -am "add preferences.txt and skills.txt files with
--------------------------------------------------------------------------------
 13. Отправить сразу 2 файла на внешний репозиторий.----------------------------$ git push
 14. На веб интерфейсе создать файл bug_report.txt.
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. Синхронизировать внешний и локальный репозиторий TXT----------------------$ git pull
